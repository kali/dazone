---

- hosts: all
  user: ubuntu
  tasks:
    - name: Install list of packages
      apt: name={{item}} state=installed
      with_items: ['build-essential', 'git', 'jshon', 'libsnappy-dev', 'mdadm', 'parallel', 'pv' ]
      become: true
    - name: discard /dev/xvdb mount
      mount: src=/dev/xvdb state=absent name=/mnt fstype=auto
      become: true
    - name: unmount /dev/xvdb
      mount: src=/dev/xvdb state=unmounted name=/mnt fstype=auto
      become: true
    - name: setup raid md0
      shell: |
        disks=`lsblk | grep xvd | grep disk | grep -v xvda | cut -f 1 -d " " | sed 's/xvd/\/dev\/xvd/g'`
        disks_count=`lsblk | grep xvd | grep disk | grep -v xvda | wc -l`
        yes | mdadm --create /dev/md0 --raid-devices=$disks_count --level=stripe $disks && \
        mkfs.ext4 /dev/md0
      args:
        creates: /dev/md0
      become: true
    - name: mount /dev/md0
      mount: src=/dev/md0 state=mounted name=/data fstype=auto
      become: true
    - name: install rust
      shell: |
        curl -sf https://raw.githubusercontent.com/brson/multirust/master/blastoff.sh > blastoff.sh
        sh blastoff.sh --yes
        rm blastoff.sh
        multirust default nightly
      args:
        creates: .multirust
    - name: install capnproto
      shell: |
        curl -O https://capnproto.org/capnproto-c++-0.5.3.tar.gz
        tar zxf capnproto-c++-0.5.3.tar.gz
        cd capnproto-c++-0.5.3
        ./configure
        make -j6 check
        sudo make install
      args:
        creates: /usr/local/bin/capnpc
    - git: repo=ssh://git@github.com/kali/dazone.git dest=dazone accept_hostkey=True
    - name: install pip
      shell: |
        curl https://bootstrap.pypa.io/get-pip.py -o /tmp/get-pip.py
        python /tmp/get-pip.py
      become: true
      args:
        creates: /usr/local/bin/pip
    - name: install awscli toolkit
      command: pip install awscli
      become: true
      args:
        creates: /usr/local/bin/aws
    - name: build dazone
      command: cargo build --release chdir=./dazone
    - name: create /data/dazone
      file: path=/data/dazone state=directory mode=0755 owner=ubuntu
      become: true
    - name: symlink data to data
      file: path=dazone/data state=link src=/data/dazone
  #    - name: generate hosts
  #      copy:
  #        dest: ./hosts
  #        content: |
  #          {% for host in groups['all'] %}
  #            {{ hostvars[host]['ansible_eth0']['ipv4']['address'] }}
  #          {% endfor %}
